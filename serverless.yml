service:
  name: blindbeez-backend-serverless
plugins:
  - "@hewmen/serverless-plugin-typescript"
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage}

  # Environment Variables
  environment:
    BLIND_PG_HOST: ${self:custom.pgHost.${self:provider.stage}}
    BLIND_PG_USERNAME: ${self:custom.pgUser.${self:provider.stage}}
    BLIND_PG_PASSWORD: ${self:custom.pgPassword.${self:provider.stage}}
    BLIND_PG_DATABASE: ${self:custom.pgDatabase.${self:provider.stage}}
    BLIND_PG_PORT: ${self:custom.pgPort.${self:provider.stage}}

# Custom Variables
custom:
  stages:
    - local
    - aws
  pgHost:
    local: localhost
    aws: blind.ctoukcg6wilz.us-east-1.rds.amazonaws.com
  pgUser:
    local: postgres
    aws: postgres
  pgPassword:
    local: admin
    aws: adminadmin
  pgDatabase:
    local: blindbeez
    aws: blindbeez
  pgPort:
    local: '5432'
    aws: '5432'
package:
  individually: true

functions:
  # author:
  #   handler: src/lambda.handler
  #   events:
  #     - http:
  #         method: any
  #         path: /api/author
  #         cors: true

  # book:
  #   handler: src/lambda.handler
  #   events:
  #     - http:
  #         method: any
  #         path: /api/book
  #         cors: true
  main:
    handler: src/lambda.handler
    events:
      - http:
          method: get
          path: /companies
          # cors: true
      - http:
          method: get
          path: /schedules
          # cors: true
      - http:
          method: post
          path: /client-scheduler
          # cors: true

  
